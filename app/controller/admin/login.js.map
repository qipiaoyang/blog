{
    "version": 3,
    "sources": [
        "..\\..\\..\\src\\controller\\admin\\login.js"
    ],
    "names": [
        "module",
        "exports",
        "think",
        "Controller",
        "indexAction",
        "display",
        "loginAction",
        "is_login",
        "islogin",
        "isAjax",
        "username",
        "post",
        "password",
        "userform",
        "model",
        "data",
        "where",
        "user",
        "find",
        "isEmpty",
        "session",
        "json",
        "name",
        "url",
        "errno",
        "fail",
        "redirect",
        "render",
        "geetestAction",
        "geetest",
        "isPost",
        "console",
        "log",
        "res",
        "validate",
        "ctx",
        "register",
        "logoutAction"
    ],
    "mappings": ";;AACAA,OAAOC,OAAP,GAAiB,cAAcC,MAAMC,UAApB,CAA+B;AAC9CC,gBAAc;AACZ,WAAO,KAAKC,OAAL,EAAP;AACD;AACKC,aAAN,GAAoB;AAAA;;AAAA;AAClB,YAAKC,QAAL,GAAgB,MAAM,MAAKC,OAAL,EAAtB;AACA,UAAG,MAAKC,MAAL,EAAH,EAAiB;AACf;AACA,YAAIC,WAAW,MAAKC,IAAL,CAAU,UAAV,CAAf;AACA,YAAIC,WAAW,MAAKD,IAAL,CAAU,UAAV,CAAf;AACA,YAAIE,WAAW,MAAKC,KAAL,CAAW,YAAX,CAAf;AACA,YAAIC,OAAO,MAAMF,SAASG,KAAT,CAAe,EAACC,MAAKP,QAAN,EAAeE,UAASA,QAAxB,EAAf,EAAkDM,IAAlD,EAAjB;AACA,YAAG,CAAChB,MAAMiB,OAAN,CAAcJ,IAAd,CAAJ,EAAwB;AACtB,gBAAKK,OAAL,CAAa,UAAb,EAAwBL,IAAxB;AACA,iBAAO,MAAKM,IAAL,CAAU;AACbC,kBAAK,MADQ;AAEbC,iBAAI,oBAFS;AAGbC,mBAAM;AAHO,WAAV,CAAP;AAKD,SAPD,MAOO;AACL,iBAAO,MAAKC,IAAL,CAAU,GAAV,EAAc,cAAd,CAAP;AACD;AACF,OAhBD,MAgBO;AACL,YAAGlB,QAAH,EAAa;AACX,iBAAO,MAAKmB,QAAL,CAAc,cAAd,CAAP;AACD,SAFD,MAEO;AACL;AACA,gBAAKC,MAAL,CAAY,oBAAZ;AACA,iBAAO,MAAKtB,OAAL,EAAP;AACD;AACF;AA1BiB;AA6BnB;AACKuB,eAAN,GAAsB;AAAA;;AAAA;AACpB,YAAMC,UAAU,OAAKf,KAAL,CAAW,SAAX,CAAhB,CADoB,CACmB;AACvC,UAAI,OAAKgB,MAAT,EAAiB;AACf,cAAMnB,OAAO,OAAKA,IAAL,EAAb;AACAoB,gBAAQC,GAAR,CAAYrB,IAAZ;AACA,cAAMsB,MAAM,MAAMJ,QAAQK,QAAR,CAAiB,OAAKC,GAAtB,EAA2BxB,IAA3B,CAAlB;AACA,eAAO,OAAKU,IAAL,CAAUY,GAAV,CAAP;AACD,OALD,MAKO;AACL,cAAMA,MAAM,MAAMJ,QAAQO,QAAR,CAAiB,OAAKD,GAAtB,CAAlB;AACA;AACA,eAAO,OAAKd,IAAL,CAAUY,GAAV,CAAP;AACD;AAXmB;AAYrB;;AAGD;AACMI,cAAN,GAAqB;AAAA;;AAAA;AACnB,YAAM,OAAKjB,OAAL,CAAa,IAAb,CAAN;AACA,aAAO,OAAKM,QAAL,CAAc,cAAd,CAAP,CAFmB,CAEkB;AAFlB;AAGpB;;AAED;AACMlB,SAAN,GAAgB;AAAA;;AAAA;AACZ;AACA,YAAMS,OAAO,MAAM,OAAKG,OAAL,CAAa,UAAb,CAAnB;AACA,YAAMa,MAAM/B,MAAMiB,OAAN,CAAcF,IAAd,IAAsB,KAAtB,GAA8B,IAA1C;AACA,aAAOgB,GAAP;AAJY;AAKf;AA7D6C,CAAhD",
    "file": "..\\..\\..\\src\\controller\\admin\\login.js",
    "sourcesContent": [
        "\nmodule.exports = class extends think.Controller {\n  indexAction() {\n    return this.display();\n  }\n  async loginAction() {\n    this.is_login = await this.islogin();\n    if(this.isAjax()){\n      //获取登陆的账号密码\n      let username = this.post('username');\n      let password = this.post('password');\n      let userform = this.model('think_user');\n      let data = await userform.where({user:username,password:password}).find();\n      if(!think.isEmpty(data)){\n        this.session('userinfo',data);\n        return this.json({\n            name:'后台首页',\n            url:'/admin/index/index',\n            errno:0\n        });\n      } else {\n        return this.fail(403,'账号密码错误，请重新填写');\n      }\n    } else {\n      if(is_login) {\n        return this.redirect('/admin/index');\n      } else {\n        // await\n        this.render('/admin/login/login');\n        return this.display();\n      }\n    }\n\n\n  }\n  async geetestAction() {\n    const geetest = this.model('geetest'); // 加载 commoon 模块下的 geetset service\n    if (this.isPost) {\n      const post = this.post();\n      console.log(post);\n      const res = await geetest.validate(this.ctx, post);\n      return this.json(res);\n    } else {\n      const res = await geetest.register(this.ctx);\n      // console.log(res);\n      return this.json(res);\n    }\n  }\n\n\n  //注销登陆界面\n  async logoutAction() {\n    await this.session(null); \n    return this.redirect('/admin/login');//登录成功将用户信息写入session，返回到user首页\n  }\n\n  //判断是否登陆\n  async islogin() {\n      // 前台判断是否登录\n      const user = await this.session('userinfo');\n      const res = think.isEmpty(user) ? false : true;\n      return res;\n  }\n};\n"
    ]
}