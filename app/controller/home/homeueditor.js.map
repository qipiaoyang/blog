{
    "version": 3,
    "sources": [
        "..\\..\\..\\src\\controller\\home\\homeueditor.js"
    ],
    "names": [
        "path",
        "require",
        "fs",
        "module",
        "exports",
        "think",
        "Controller",
        "indexAction",
        "config",
        "action",
        "get",
        "result",
        "uploads",
        "uploadlist",
        "crawler",
        "state",
        "jsonp",
        "base64",
        "fieldName",
        "pathFormat",
        "maxSize",
        "allowFiles",
        "Number",
        "file",
        "extend",
        "filepath",
        "extname",
        "name",
        "basename",
        "qiniu",
        "extService",
        "uppic",
        "uploadpic",
        "isEmpty",
        "key",
        "hash",
        "size",
        "up",
        "ctx",
        "getFileInfo",
        "source",
        "post",
        "isArray",
        "list",
        "imgUrl",
        "info",
        "saveRemote",
        "push",
        "url",
        "title",
        "original",
        "listSize",
        "start",
        "end",
        "parseInt",
        "substr",
        "lastIndexOf",
        "console",
        "log",
        "files",
        "scanFolder",
        "length",
        "len",
        "files_n",
        "i",
        "t",
        "toLocaleLowerCase",
        "in_array",
        "lenn",
        "Math",
        "min",
        "f",
        "fileList",
        "folderList",
        "walk",
        "readdirSync",
        "resource",
        "forEach",
        "item",
        "tmpPath",
        "stats",
        "statSync",
        "isDirectory"
    ],
    "mappings": "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",
    "file": "..\\..\\..\\src\\controller\\home\\homeueditor.js",
    "sourcesContent": [
        "// +----------------------------------------------------------------------\r\n// | CmsWing [ 网站内容管理框架 ]\r\n// +----------------------------------------------------------------------\r\n// | Copyright (c) 2015-2115 http://www.cmswing.com All rights reserved.\r\n// +----------------------------------------------------------------------\r\n// | Author: arterli <arterli@qq.com>\r\n// +----------------------------------------------------------------------\r\n\r\nconst path = require('path');\r\nconst fs = require('fs');\r\nmodule.exports = class extends think.Controller {\r\n  /**\r\n     * 前台百度编辑器上传\r\n     * @return {Promise} []\r\n     */\r\n  async indexAction() {\r\n    // auto render template file index_index.html\r\n    this.config = {\r\n      /* 上传图片配置项 */\r\n      'imageActionName': 'uploadimage', /* 执行上传图片的action名称 */\r\n      'imageFieldName': 'upfile', /* 提交的图片表单名称 */\r\n      'imageMaxSize': 2048000, /* 上传大小限制，单位B */\r\n      'imageAllowFiles': ['.png', '.jpg', '.jpeg', '.gif', '.bmp'], /* 上传图片格式显示 */\r\n      'imageCompressEnable': true, /* 是否压缩图片,默认是true */\r\n      'imageCompressBorder': 1600, /* 图片压缩最长边限制 */\r\n      'imageInsertAlign': 'none', /* 插入的图片浮动方式 */\r\n      'imageUrlPrefix': '', /* 图片访问路径前缀 */\r\n      'imagePathFormat': '/upload/editor/image/{yyyy}{mm}{dd}/{time}{rand:6}', /* 上传保存路径,可以自定义保存路径和文件名格式 */\r\n      /* {filename} 会替换成原文件名,配置这项需要注意中文乱码问题 */\r\n      /* {rand:6} 会替换成随机数,后面的数字是随机数的位数 */\r\n      /* {time} 会替换成时间戳 */\r\n      /* {yyyy} 会替换成四位年份 */\r\n      /* {yy} 会替换成两位年份 */\r\n      /* {mm} 会替换成两位月份 */\r\n      /* {dd} 会替换成两位日期 */\r\n      /* {hh} 会替换成两位小时 */\r\n      /* {ii} 会替换成两位分钟 */\r\n      /* {ss} 会替换成两位秒 */\r\n      /* 非法字符 \\ : * ? \" < > | */\r\n      /* 具请体看线上文档: fex.baidu.com/ueditor/#use-format_upload_filename */\r\n\r\n      /* 涂鸦图片上传配置项 */\r\n      'scrawlActionName': 'uploadscrawl', /* 执行上传涂鸦的action名称 */\r\n      'scrawlFieldName': 'upfile', /* 提交的图片表单名称 */\r\n      'scrawlPathFormat': '/upload/editor/image/{yyyy}{mm}{dd}/{time}{rand:6}', /* 上传保存路径,可以自定义保存路径和文件名格式 */\r\n      'scrawlMaxSize': 2048000, /* 上传大小限制，单位B */\r\n      'scrawlUrlPrefix': '', /* 图片访问路径前缀 */\r\n      'scrawlInsertAlign': 'none',\r\n\r\n      /* 截图工具上传 */\r\n      'snapscreenActionName': 'uploadimage', /* 执行上传截图的action名称 */\r\n      'snapscreenPathFormat': '/upload/editor/image/{yyyy}{mm}{dd}/{time}{rand:6}', /* 上传保存路径,可以自定义保存路径和文件名格式 */\r\n      'snapscreenUrlPrefix': '', /* 图片访问路径前缀 */\r\n      'snapscreenInsertAlign': 'none', /* 插入的图片浮动方式 */\r\n\r\n      /* 抓取远程图片配置 */\r\n      'catcherLocalDomain': ['127.0.0.1', 'localhost', 'img.baidu.com'],\r\n      'catcherActionName': 'catchimage', /* 执行抓取远程图片的action名称 */\r\n      'catcherFieldName': 'source', /* 提交的图片列表表单名称 */\r\n      'catcherPathFormat': '/upload/editor/image/catcher/{yyyy}{mm}{dd}/{time}{rand:6}', /* 上传保存路径,可以自定义保存路径和文件名格式 */\r\n      'catcherUrlPrefix': '', /* 图片访问路径前缀 */\r\n      'catcherMaxSize': 2048000, /* 上传大小限制，单位B */\r\n      'catcherAllowFiles': ['.png', '.jpg', '.jpeg', '.gif', '.bmp'], /* 抓取图片格式显示 */\r\n\r\n      /* 上传视频配置 */\r\n      'videoActionName': 'uploadvideo', /* 执行上传视频的action名称 */\r\n      'videoFieldName': 'upfile', /* 提交的视频表单名称 */\r\n      'videoPathFormat': '/upload/editor/video/{yyyy}{mm}{dd}/{time}{rand:6}', /* 上传保存路径,可以自定义保存路径和文件名格式 */\r\n      'videoUrlPrefix': '', /* 视频访问路径前缀 */\r\n      'videoMaxSize': 102400000, /* 上传大小限制，单位B，默认100MB */\r\n      'videoAllowFiles': [\r\n        '.flv', '.swf', '.mkv', '.avi', '.rm', '.rmvb', '.mpeg', '.mpg',\r\n        '.ogg', '.ogv', '.mov', '.wmv', '.mp4', '.webm', '.mp3', '.wav', '.mid'], /* 上传视频格式显示 */\r\n\r\n      /* 上传文件配置 */\r\n      'fileActionName': 'uploadfile', /* controller里,执行上传视频的action名称 */\r\n      'fileFieldName': 'upfile', /* 提交的文件表单名称 */\r\n      'filePathFormat': '/upload/editor/file/{yyyy}{mm}{dd}/{time}{rand:6}', /* 上传保存路径,可以自定义保存路径和文件名格式 */\r\n      'fileUrlPrefix': '', /* 文件访问路径前缀 */\r\n      'fileMaxSize': 51200000, /* 上传大小限制，单位B，默认50MB */\r\n      'fileAllowFiles': [\r\n        '.png', '.jpg', '.jpeg', '.gif', '.bmp',\r\n        '.flv', '.swf', '.mkv', '.avi', '.rm', '.rmvb', '.mpeg', '.mpg',\r\n        '.ogg', '.ogv', '.mov', '.wmv', '.mp4', '.webm', '.mp3', '.wav', '.mid',\r\n        '.rar', '.zip', '.tar', '.gz', '.7z', '.bz2', '.cab', '.iso',\r\n        '.doc', '.docx', '.xls', '.xlsx', '.ppt', '.pptx', '.pdf', '.txt', '.md', '.xml'\r\n      ], /* 上传文件格式显示 */\r\n\r\n      /* 列出指定目录下的图片 */\r\n      'imageManagerActionName': 'listimage', /* 执行图片管理的action名称 */\r\n      'imageManagerListPath': '/upload/editor/image/', /* 指定要列出图片的目录 */\r\n      'imageManagerListSize': 20, /* 每次列出文件数量 */\r\n      'imageManagerUrlPrefix': '', /* 图片访问路径前缀 */\r\n      'imageManagerInsertAlign': 'none', /* 插入的图片浮动方式 */\r\n      'imageManagerAllowFiles': ['.png', '.jpg', '.jpeg', '.gif', '.bmp'], /* 列出的文件类型 */\r\n\r\n      /* 列出指定目录下的文件 */\r\n      'fileManagerActionName': 'listfile', /* 执行文件管理的action名称 */\r\n      'fileManagerListPath': '/upload/editor/file/', /* 指定要列出文件的目录 */\r\n      'fileManagerUrlPrefix': '', /* 文件访问路径前缀 */\r\n      'fileManagerListSize': 20, /* 每次列出文件数量 */\r\n      'fileManagerAllowFiles': [\r\n        '.png', '.jpg', '.jpeg', '.gif', '.bmp',\r\n        '.flv', '.swf', '.mkv', '.avi', '.rm', '.rmvb', '.mpeg', '.mpg',\r\n        '.ogg', '.ogv', '.mov', '.wmv', '.mp4', '.webm', '.mp3', '.wav', '.mid',\r\n        '.rar', '.zip', '.tar', '.gz', '.7z', '.bz2', '.cab', '.iso',\r\n        '.doc', '.docx', '.xls', '.xlsx', '.ppt', '.pptx', '.pdf', '.txt', '.md', '.xml'\r\n      ] /* 列出的文件类型 */\r\n\r\n    };\r\n    const action = this.get('action');\r\n    // think.log(action);\r\n    let result;\r\n    switch (action) {\r\n      case 'config':\r\n        result = this.config;\r\n\r\n        break;\r\n\r\n        /* 上传图片 */\r\n      case 'uploadimage':\r\n        /* 上传涂鸦 */\r\n      case 'uploadscrawl':\r\n        /* 上传视频 */\r\n      case 'uploadvideo':\r\n        /* 上传文件 */\r\n      case 'uploadfile':\r\n\r\n        result = await this.uploads();\r\n        // console.log(result);\r\n        break;\r\n\r\n        /* 列出图片 */\r\n      case 'listimage':\r\n        result = this.uploadlist();\r\n        break;\r\n        /* 列出文件 */\r\n      case 'listfile':\r\n        result = this.uploadlist();\r\n        break;\r\n\r\n        /* 抓取远程文件 */\r\n      case 'catchimage':\r\n        result = await this.crawler();\r\n        break;\r\n\r\n      default:\r\n        result = {\r\n          state: '请求地址出错'\r\n        };\r\n\r\n        break;\r\n    }\r\n    // 返回结果\r\n    return this.jsonp(result);\r\n  }\r\n\r\n  async uploads() {\r\n    /**\r\n         * 得到上传文件所对应的各个参数,数组结构\r\n         * obj={\r\n     *     \"state\" : \"\",          //上传状态，上传成功时必须返回\"SUCCESS\"\r\n     *     \"url\" : \"\",            //返回的地址\r\n     *     \"title\" : \"\",          //新文件名\r\n     *     \"original\" : \"\",       //原始文件名\r\n     *     \"type\" : \"\" ,           //文件类型\r\n     *     \"size\" : \"\",           //文件大小\r\n     * }\r\n         */\r\n    const action = this.get('action');\r\n    let base64 = 'upload';\r\n    let config = {};\r\n    let fieldName;\r\n    // console.log(setup);\r\n    switch (action) {\r\n      case 'uploadimage':\r\n        config = {\r\n          pathFormat: this.config['imagePathFormat'],\r\n          maxSize: this.config['imageMaxSize'],\r\n          allowFiles: this.config['imageAllowFiles']\r\n        };\r\n        fieldName = this.config['imageFieldName'];\r\n        break;\r\n      case 'uploadscrawl':\r\n        config = {\r\n          'pathFormat': this.config['scrawlPathFormat'],\r\n          'maxSize': this.config['scrawlMaxSize'],\r\n          'allowFiles': this.config['scrawlAllowFiles'],\r\n          'oriName': 'scrawl.png'\r\n        };\r\n        fieldName = this.config['scrawlFieldName'];\r\n        base64 = 'base64';\r\n        break;\r\n      case 'uploadvideo':\r\n        config = {\r\n          'pathFormat': this.config['videoPathFormat'],\r\n          'maxSize': this.config['videoMaxSize'],\r\n          'allowFiles': this.config['videoAllowFiles']\r\n        };\r\n        fieldName = this.config['videoFieldName'];\r\n        break;\r\n      case 'uploadfile':\r\n      default:\r\n        config = {\r\n          'pathFormat': this.config['filePathFormat'],\r\n          'maxSize': this.config['fileMaxSize'],\r\n          'allowFiles': this.config['fileAllowFiles']\r\n        };\r\n        fieldName = this.config['fileFieldName'];\r\n        break;\r\n    }\r\n    // 加入七牛接口\r\n    if (Number(think.config('ext.qiniu.is')) === 1 && base64 === 'upload') {\r\n      const file = think.extend({}, this.file(fieldName));\r\n      // console.log(file);\r\n      const filepath = file.path;\r\n      const extname = path.extname(file.name);\r\n      const basename = path.basename(filepath) + extname;\r\n      const qiniu = this.extService('qiniu', 'qiniu');\r\n      const uppic = await qiniu.uploadpic(filepath, basename);\r\n      if (!think.isEmpty(uppic)) {\r\n        return {\r\n          'state': 'SUCCESS',\r\n          'url': `//${think.config('ext.qiniu.domain')}/${uppic.key}`,\r\n          'title': uppic.hash,\r\n          'original': file.name,\r\n          'type': extname,\r\n          'size': file.size\r\n        };\r\n      }\r\n    } else {\r\n      // return self.uploader(fieldName, config, oriName, size, path, base64);\r\n      const up = this.extService('ueditor', 'editor', fieldName, config, base64, this.ctx); // 加载名为 ueditor 的 editor Adapter\r\n      // console.log(\"ddddddd\"+upload.getFileInfo);\r\n      return up.getFileInfo;\r\n    }\r\n  }\r\n\r\n  // 抓取远程图片\r\n  async crawler() {\r\n    /* 上传配置 */\r\n    const config = {\r\n      'pathFormat': this.config['catcherPathFormat'],\r\n      'maxSize': this.config['catcherMaxSize'],\r\n      'allowFiles': this.config['catcherAllowFiles'],\r\n      'oriName': 'remote.png'\r\n    };\r\n    const fieldName = this.config['catcherFieldName'];\r\n    let source = this.post(fieldName + '[]');\r\n    if (think.isArray(source)) {\r\n      source = source;\r\n    } else {\r\n      source = [source];\r\n    }\r\n    const list = [];\r\n    for (const imgUrl of source) {\r\n      const up = this.extService('ueditor', 'editor', imgUrl, config, 'remote'); // 加载名为 ueditor 的 editor Adapter\r\n      const info = await up.saveRemote();\r\n      // console.log(info);\r\n      list.push({'state': 'SUCCESS', 'url': info.url, 'size': 431521, 'title': info.title, 'original': info.original, 'source': imgUrl});\r\n    }\r\n    // console.log(think.isEmpty(list));\r\n    return {\r\n      state: !think.isEmpty(list) ? 'SUCCESS' : 'ERROR',\r\n      list: list\r\n    };\r\n  }\r\n\r\n  /**\r\n     * 获取已上传的文件列表\r\n     */\r\n  uploadlist() {\r\n    var allowFiles, listSize, path;\r\n    // 判断类型\r\n    switch (this.get('action')) {\r\n      // 列出文件\r\n      case 'listfile':\r\n        allowFiles = this.config['fileManagerAllowFiles'];\r\n        listSize = this.config['fileManagerListSize'];\r\n        path = this.config['fileManagerListPath'];\r\n        break;\r\n        // 列出图片\r\n      case 'listimage':\r\n      default:\r\n        allowFiles = this.config['imageManagerAllowFiles'];\r\n        listSize = this.config['imageManagerListSize'];\r\n        path = this.config['imageManagerListPath'];\r\n    }\r\n    // allowFiles = allowFiles.join(\"\").replace(/[.]/g,\"|\").substr(1);\r\n    /* 获取参数 */\r\n    var size = this.get('size') ? this.get('size') : listSize;\r\n    var start = this.get('start') ? this.get('start') : 0;\r\n    var end = parseInt(size) + parseInt(start);\r\n    /* 获取文件列表 */\r\n    path = path.substr(0, path.lastIndexOf('/'));\r\n    console.log(path);\r\n    var files = this.scanFolder(path).files;\r\n    if (files.length == 0) {\r\n      return {\r\n        'state': 'no match file',\r\n        'list': [],\r\n        'start': start,\r\n        'total': files.length\r\n      };\r\n    }\r\n    /* 获取指定范围的列表 */\r\n    var len = files.length;\r\n    var files_n = [];\r\n    for (var i = 0; i < len; i++) {\r\n      var t = files[i].substr(files[i].lastIndexOf('.')).toLocaleLowerCase();\r\n      if (in_array(t, allowFiles)) {\r\n        files_n.push(files[i]);\r\n      }\r\n    }\r\n\r\n    var lenn = files_n.length;\r\n    for (var i = Math.min(end, lenn) - 1, list = []; i < lenn && i >= 0 && i >= start; i--) {\r\n      var f = files_n[i];\r\n      list.push({url: f});\r\n    }\r\n\r\n    return {\r\n      'state': 'SUCCESS',\r\n      'list': list,\r\n      'start': start,\r\n      'total': files.length\r\n    };\r\n  }\r\n  /**\r\n     * 遍历获取目录下的指定类型的文件\r\n     */\r\n  scanFolder(path) {\r\n    var fileList = [],\r\n      folderList = [],\r\n      walk = function(path, fileList, folderList) {\r\n        const files = fs.readdirSync(think.resource + '/' + path);\r\n        files.forEach(function(item) {\r\n          var tmpPath = path + '/' + item,\r\n            stats = fs.statSync(think.resource + '/' + tmpPath);\r\n\r\n          if (stats.isDirectory()) {\r\n            walk(tmpPath, fileList, folderList);\r\n            folderList.push(tmpPath);\r\n          } else {\r\n            fileList.push(tmpPath);\r\n          }\r\n        });\r\n      };\r\n\r\n    walk(path, fileList, folderList);\r\n\r\n    console.log('扫描' + path + '成功');\r\n\r\n    return {\r\n      'files': fileList,\r\n      'folders': folderList\r\n    };\r\n  }\r\n};\r\n"
    ]
}